# serverless.yml

service: library-flask-app

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  tableName: 'Library-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": [ "LibraryDynamoDBTable", "Arn" ] }
  environment:
    LIBRARY_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /hello

  createItem:
    handler: wsgi.handler
    events:
      - http: POST /item

  list:
    handler: wsgi.handler
    events:
      - http: GET /itemlist

  getItem:
    handler: wsgi.handler
    events:
      - http: GET /item

  updateItem:
    handler: wsgi.handler
    events:
      - http: PUT /updateitem

  deleteItem:
    handler: wsgi.handler
    events:
      - http: DELETE /deleteitem


resources:
  Resources:
    LibraryDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: serialId
            AttributeType: S
        KeySchema:
          -
            AttributeName: serialId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}